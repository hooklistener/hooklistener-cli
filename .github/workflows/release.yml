name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive: zip
          - os: macos-13
            target: x86_64-apple-darwin
            archive: tar.gz
          - os: macos-14
            target: aarch64-apple-darwin
            archive: tar.gz
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable + target)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (cargo)
        run: cargo build --release --target ${{ matrix.target }} --locked

      - name: Package binary
        shell: bash
        run: |
          binary_name="hooklistener-cli"
          if [[ "${{ matrix.target }}" == *"windows"* ]]; then
            binary_name="${binary_name}.exe"
          fi

          mkdir -p target/dist

          if [[ "${{ matrix.archive }}" == "zip" ]]; then
            cd target/${{ matrix.target }}/release
            7z a "../../../dist/${binary_name}-${{ matrix.target }}.zip" "${binary_name}"
          else
            cd target/${{ matrix.target }}/release
            tar -czf "../../../dist/${binary_name}-${{ matrix.target }}.tar.gz" "${binary_name}"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.target }}
          path: |
            target/dist/*
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Generate checksums
        shell: bash
        run: |
          cd dist
          shopt -s nullglob
          for f in *; do
            if [[ -f "$f" ]]; then
              sha256sum "$f" >> SHA256SUMS.txt
            fi
          done
          echo "Generated SHA256SUMS.txt" && cat SHA256SUMS.txt

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
